{"version":3,"sources":["webpack:///./src/pages/404.jsx","webpack:///./src/components/layout.jsx","webpack:///./src/components/seo.jsx","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/header.jsx","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/link.jsx","webpack:///./src/components/contact.jsx","webpack:///./src/components/index.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["NotFoundPage","title","Layout","hideFooter","children","data","Provider","value","className","siteTitle","site","siteMetadata","SEO","description","lang","meta","metaDescription","htmlAttributes","titleTemplate","defaultTitle","name","content","property","author","concat","defaultProps","m","module","exports","require","default","Header","type","style","bar","first","second","third","navMenu","to","loader","enqueue","React","createContext","ListLink","rest","Link","showButton","isAbsoluteUrl","href","target","rel","url","test","Contact","width","display","alignItems","justifyContent","ProdPageRenderer","location","pageResources","createElement","InternalPageRenderer","json"],"mappings":"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","file":"component---src-pages-404-jsx-0dd6145c2a4342000e6b.js","sourcesContent":["import React from \"react\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\n\r\nconst NotFoundPage = () => (\r\n  <Layout>\r\n    <SEO title=\"404: Not found\" />\r\n    <h1>NOT FOUND</h1>\r\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\r\n  </Layout>\r\n)\r\n\r\nexport default NotFoundPage\r\n","/**\r\n * Layout component that queries for data\r\n * with Gatsby's useStaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useStaticQuery, graphql } from \"gatsby\";\r\nimport { IconContext } from \"react-icons\";\r\n\r\nimport { Header, Contact } from \".\";\r\nimport \"./layout.module.scss\";\r\n\r\nconst Layout = ({ hideFooter, children }) => {\r\n  const data = useStaticQuery(graphql`\r\n    query SiteTitleQuery {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n        }\r\n      }\r\n    }\r\n  `);\r\n\r\n  return (\r\n    <>\r\n      <IconContext.Provider value={{ className: \"icon\" }}>\r\n        <Header siteTitle={data.site.siteMetadata.title} />\r\n        <main>{children}</main>\r\n        {!hideFooter && (\r\n          <footer>\r\n            <Contact />\r\n          </footer>\r\n        )}\r\n      </IconContext.Provider>\r\n    </>\r\n  );\r\n};\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Layout;\r\n","/**\r\n * SEO component that queries for data with\r\n *  Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Helmet from \"react-helmet\";\r\nimport { useStaticQuery, graphql } from \"gatsby\";\r\n\r\nconst SEO = ({ description, lang, meta, title }) => {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `\r\n  );\r\n\r\n  const metaDescription = description || site.siteMetadata.description;\r\n\r\n  return (\r\n    <Helmet\r\n      htmlAttributes={{\r\n        lang,\r\n      }}\r\n      title={title}\r\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\r\n      defaultTitle=\"Ahmad Game\"\r\n      meta={[\r\n        {\r\n          name: `description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          property: `og:description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:type`,\r\n          content: `website`,\r\n        },\r\n        {\r\n          name: `twitter:card`,\r\n          content: `summary`,\r\n        },\r\n        {\r\n          name: `twitter:creator`,\r\n          content: site.siteMetadata.author,\r\n        },\r\n        {\r\n          name: `twitter:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          name: `twitter:description`,\r\n          content: metaDescription,\r\n        },\r\n      ].concat(meta)}\r\n    />\r\n  );\r\n};\r\n\r\nSEO.defaultProps = {\r\n  lang: `en`,\r\n  meta: [],\r\n  description: ``,\r\n};\r\n\r\nSEO.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.arrayOf(PropTypes.object),\r\n};\r\n\r\nexport default SEO;\r\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\";\r\n\r\nimport style from \"./header.module.scss\";\r\nimport { ListLink } from \".\";\r\n\r\nconst Header = () => (\r\n  <header>\r\n    <nav>\r\n      <input type=\"checkbox\" />\r\n      <span className={`${style.bar} ${style.first}`} />\r\n      <span className={`${style.bar} ${style.second}`} />\r\n      <span className={`${style.bar} ${style.third}`} />\r\n      <ul className={style.navMenu}>\r\n        <ListLink className=\"dark-bg\" to=\"/\">\r\n          Home\r\n        </ListLink>\r\n        <ListLink className=\"dark-bg\" to=\"/bio/\">\r\n          Who I am\r\n        </ListLink>\r\n        <ListLink className=\"dark-bg\" to=\"/experience/\">\r\n          What I do\r\n        </ListLink>\r\n        <ListLink className=\"dark-bg\" to=\"/blog/\">\r\n          What I think\r\n        </ListLink>\r\n      </ul>\r\n    </nav>\r\n  </header>\r\n);\r\n\r\nexport default Header;\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link as InternalLink } from \"gatsby\";\r\nimport { OutboundLink } from \"gatsby-plugin-google-analytics\";\r\n\r\nconst ListLink = ({ to, children, ...rest }) => {\r\n  return (\r\n    <li>\r\n      <Link to={to} {...rest}>\r\n        {children}\r\n      </Link>\r\n    </li>\r\n  );\r\n};\r\n\r\nconst Link = ({ to, showButton, children, ...rest }) => {\r\n  const link = isAbsoluteUrl(to) ? (\r\n    <OutboundLink href={to} target=\"_blank\" rel=\"noreferrer\" {...rest}>\r\n      {children}\r\n    </OutboundLink>\r\n  ) : (\r\n    <InternalLink to={to} {...rest}>\r\n      {children}\r\n    </InternalLink>\r\n  );\r\n\r\n  return link;\r\n};\r\n\r\nconst isAbsoluteUrl = url => {\r\n  const pattern = /^(https?:\\/\\/)|(mailto:)|(tel:)/i;\r\n  return pattern.test(url);\r\n};\r\n\r\nLink.propTypes = {\r\n  to: PropTypes.string.isRequired,\r\n};\r\n\r\nexport { Link, ListLink };\r\n","import React from \"react\";\r\nimport { Link } from \"./link\";\r\nimport { MdEmail } from \"react-icons/md\";\r\nimport { FaLinkedinIn, FaGithub } from \"react-icons/fa\";\r\n\r\nconst Contact = () => (\r\n  <div\r\n    style={{\r\n      width: \"15rem\",\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"space-between\",\r\n    }}\r\n  >\r\n    <Link className=\"dark-bg\" to=\"https://github.com/a-game\">\r\n      <FaGithub />\r\n    </Link>\r\n    <Link className=\"dark-bg\" to=\"mailto:me@ahmadgame.com\">\r\n      <MdEmail />\r\n    </Link>\r\n    <Link className=\"dark-bg\" to=\"https://www.linkedin.com/in/ahmadgame\">\r\n      <FaLinkedinIn />\r\n    </Link>\r\n  </div>\r\n);\r\n\r\nexport default Contact;\r\n","import Header from \"./header\";\r\nimport Layout from \"./layout\";\r\nimport SEO from \"./seo\";\r\nimport { Link, ListLink } from \"./link\";\r\nimport Contact from \"./contact\";\r\n\r\nexport { Header, Layout, SEO, Link, ListLink, Contact };\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}