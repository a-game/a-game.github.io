{"version":3,"sources":["webpack:///./src/pages/experience.jsx","webpack:///./src/components/layout.jsx","webpack:///./src/components/seo.jsx","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/header.jsx","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/link.jsx","webpack:///./src/components/contact.jsx","webpack:///./src/components/index.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["XpPage","title","description","className","style","timeline","row","linePart","date","line","textPart","project","tags","to","role","aria-label","Layout","hideFooter","children","data","Provider","value","siteTitle","site","siteMetadata","SEO","lang","meta","metaDescription","htmlAttributes","titleTemplate","defaultTitle","name","content","property","author","concat","defaultProps","m","module","exports","require","default","Header","type","bar","first","second","third","navMenu","loader","enqueue","React","createContext","ListLink","rest","Link","showButton","isAbsoluteUrl","href","target","rel","url","test","Contact","width","display","alignItems","justifyContent","ProdPageRenderer","location","pageResources","createElement","InternalPageRenderer","json"],"mappings":"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","file":"component---src-pages-experience-jsx-fb4530564dc798619eba.js","sourcesContent":["import React from \"react\";\r\nimport { Layout, SEO, ListLink, Link } from \"../components\";\r\nimport { MdMultilineChart, MdCode, MdSchool } from \"react-icons/md\";\r\nimport { FaBaby } from \"react-icons/fa\";\r\nimport style from \"./experience.module.scss\";\r\n\r\nconst XpPage = () => {\r\n  return (\r\n    <Layout>\r\n      <SEO title=\"Experience\" description=\"My Experience and resumÃ©\" />\r\n      <article className=\"content\">\r\n        <section>\r\n          <h2 className=\"text-center\">What I do</h2>\r\n          <div className=\"row\">\r\n            <div className=\"column\">\r\n              <div className=\"column-header\">\r\n                <MdCode className=\"color-secondary\" />\r\n                <h4>Developer</h4>\r\n              </div>\r\n              <p className=\"column-text\">\r\n                I am first and foremost a developer. For me, software\r\n                development is about solving problems in a creative way, which\r\n                is awesome!\r\n              </p>\r\n              <p className=\"column-text\">\r\n                It's like playing with lego, without the risk of stepping on\r\n                one.\r\n              </p>\r\n            </div>\r\n            <div className=\"column\">\r\n              <div className=\"column-header\">\r\n                <MdMultilineChart className=\"color-secondary\" />\r\n                <h4>Product Manager</h4>\r\n              </div>\r\n              <p className=\"column-text\">\r\n                The user perspective and the business side of software\r\n                development is something that I find interesting.\r\n              </p>\r\n              <p className=\"column-text\">\r\n                We shouldn't forget that the end goal of all software is to\r\n                solve human problems.\r\n              </p>\r\n            </div>\r\n            <div className=\"column\">\r\n              <div className=\"column-header\">\r\n                <MdSchool className=\"color-secondary\" />\r\n                <h4>Teacher</h4>\r\n              </div>\r\n              <p className=\"column-text\">\r\n                I've been often described as a good teacher. Which is quite\r\n                useful when trying to explain software and getting different\r\n                people to work together.\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </section>\r\n        <section>\r\n          <h2 className=\"text-center\">Career summary</h2>\r\n          <div className={style.timeline}>\r\n            <div className={style.row}>\r\n              <div className={style.linePart}>\r\n                <div className={style.date}>2019</div>\r\n                <div className={style.line}></div>\r\n              </div>\r\n              <div className={style.textPart}>\r\n                <h4>Founder - Gamesome</h4>\r\n                <p>\r\n                  Gamesome is a software company that I'm hoping will start out\r\n                  as a consultant company and then grow into product\r\n                  development. But time will tell.\r\n                </p>\r\n              </div>\r\n            </div>\r\n            <div className={style.row}>\r\n              <div className={style.linePart}>\r\n                <div className={style.date}>2015</div>\r\n                <div className={style.line}></div>\r\n              </div>\r\n              <div className={style.textPart}>\r\n                <h4>Product manager - Lime Technologies</h4>\r\n                <p>\r\n                  After working as developer for four years, I got offered a\r\n                  position as a product manager at Lime. That sounded like fun\r\n                  and I wanted to try it out. One big advantage to going from\r\n                  development to product is that it gave me a huge advantage\r\n                  when communicating with developers and consultants who deliver\r\n                  our products. It was also great when talking to technical\r\n                  customers, partners using our API:s and our tech support.\r\n                  However, It wasn't all good. One of the big challenges for me,\r\n                  was focusing on the \"problem space\" and not the \"solution\r\n                  space\", that is something that I have to actively think about.\r\n                </p>\r\n                <p>\r\n                  During my time as a PM I worked with Lime products targeting\r\n                  sales and marketing market segments. This thought me quite a\r\n                  lot about those domains.\r\n                </p>\r\n              </div>\r\n            </div>\r\n            <div className={style.row}>\r\n              <div className={style.linePart}>\r\n                <div className={style.date}>2011</div>\r\n                <div className={style.line}></div>\r\n              </div>\r\n              <div className={style.textPart}>\r\n                <h4>Software developer - Lime Technologies</h4>\r\n                <p>\r\n                  Lime is the swedish market leader on CRM. They develop, sell,\r\n                  deliver and support their CRM products. This is quite great if\r\n                  you are a developer, because you are always close to the\r\n                  actual user. You direct input from users when developing new\r\n                  features, and quick feedback when something breaks.\r\n                </p>\r\n                <p>\r\n                  I joined Lime when the development department was still quite\r\n                  small so I got a chance to work on all of their three CRM\r\n                  products. I later took lead on gracefully moving users from\r\n                  their oldest legacy product, Lime Easy, to the other two; Lime\r\n                  Go which is a Sales focused CRM system for smaller companies\r\n                  and Lime CRM which is Limes flagship platform.\r\n                </p>\r\n              </div>\r\n            </div>\r\n            <div className={style.row}>\r\n              <div className={style.linePart}>\r\n                <div className={style.date}>2008</div>\r\n                <div className={style.line}></div>\r\n              </div>\r\n              <div className={style.textPart}>\r\n                <h4>BS in Software development - Lund University</h4>\r\n                <p>\r\n                  After starting a few programs, I finally finished a degree in\r\n                  software development. What's cool about This specific program,\r\n                  is that it was\r\n                </p>\r\n              </div>\r\n            </div>\r\n            <div className={style.row}>\r\n              <div className={style.linePart}>\r\n                <div className={style.date}>2010</div>\r\n                <div className={style.line}></div>\r\n              </div>\r\n              <div className={style.textPart}>\r\n                <h4>Programming Tutor - Lund University</h4>\r\n                <p>\r\n                  During my studies, I worked for Lund university as a tutor,\r\n                  helping other students with programming classes. This was fun\r\n                  and useful because in order to hold a lecture about\r\n                  programming, I had to read up and really try to understand the\r\n                  concepts we were taught.\r\n                </p>\r\n              </div>\r\n            </div>\r\n            <div className={style.row}>\r\n              <div className={style.linePart}>\r\n                <div className={style.date}>2005</div>\r\n                <div className={style.line}></div>\r\n              </div>\r\n              <div className={style.textPart}>\r\n                <h4>Study - Lund University</h4>\r\n                <p>\r\n                  At this point of my life, I couldn't really decide on what I\r\n                  wanted to do. To solve that problem I just enrolled to as many\r\n                  courses as I could. I started an degree in engineering and\r\n                  another in finance, but I didn't finish any of them. I did\r\n                  however learn about physics, mathematics and accounting.\r\n                </p>\r\n              </div>\r\n            </div>\r\n            <div className={style.row}>\r\n              <div className={style.linePart}>\r\n                <div className={style.date}>\r\n                  <FaBaby />\r\n                </div>\r\n              </div>\r\n              <div className={style.textPart}></div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n        <section>\r\n          <h2 className=\"text-center\">Experience</h2>\r\n          <div className={style.project}>\r\n            <h3>Lime CRM add-ons</h3>\r\n            <ul className={style.tags}>\r\n              <ListLink to=\"https://www.python.org/\">Python</ListLink>\r\n              <ListLink to=\"https://developer.mozilla.org/en-US/docs/Web/Web_Components\">\r\n                Web Components\r\n              </ListLink>\r\n              <ListLink to=\"https://reactjs.org/\">React</ListLink>\r\n              <ListLink to=\"https://stenciljs.com\">stencil.js</ListLink>\r\n              <ListLink to=\"https://www.ecma-international.org/ecma-262/9.0/\">\r\n                ES 2018\r\n              </ListLink>\r\n            </ul>\r\n            <p>\r\n              Lime CRM is an interesting product, with a really bad name. It's\r\n              not really a CRM at all. It's more like a platform for building\r\n              data manipulation tools.\r\n            </p>\r\n            <p>\r\n              Out of the box, what you get is a relational database, a web API\r\n              that can serve the data, a client that can visualize the data and\r\n              some micro services that can do other things with the data. For\r\n              example there is a search engine that can make the data searchable\r\n              and message queue that can tell you when the data has changed.\r\n            </p>\r\n            <p>\r\n              The cool thing is that all of this stuff is extendable and\r\n              customizable. You can specify your own personal schema and object\r\n              names, which will then be available in the API, and so on. You\r\n              could even write your own custom API endpoint with your own\r\n              business logic and extend the web client using Web Components to\r\n              visualize and interact with the data in your own way.\r\n            </p>\r\n            <p>\r\n              Although this was not my main job at the time, I learned a lot by\r\n              testing and building small add-ons (which is a packaged\r\n              combination of the aforementioned customizations). Imagine\r\n              building a React app with the dev team in the room next door{\" \"}\r\n              <span role=\"img\" aria-label=\"smile\">\r\n                ð\r\n              </span>\r\n            </p>\r\n          </div>\r\n          <div className={style.project}>\r\n            <h3>Product Management</h3>\r\n            <ul className={style.tags}>\r\n              <ListLink to=\"https://ads.google.com\">Google Ads</ListLink>\r\n              <ListLink to=\"https://metabase.com/\">Metabase</ListLink>\r\n              <ListLink to=\"https://segment.com/\">Segment</ListLink>\r\n            </ul>\r\n            <p>\r\n              As a product manager I was responsible for the whole user journey.\r\n              That often starts with a web search for some solution to their\r\n              current problem.\r\n            </p>\r\n            <p>\r\n              Im my role I worked with the marketing department to to try to\r\n              attract as many web searches as possible to our product websites.\r\n              I worked with sales people to maximize conversion. I worked with\r\n              the development team to make sure the users got value for their\r\n              money. And I worked with support staff to make sure the users\r\n              stayed happy. All the while listening to feedback to tweak the\r\n              whole process.\r\n            </p>\r\n          </div>\r\n          <div className={style.project}>\r\n            <h3>Lime Go</h3>\r\n            <ul className={style.tags}>\r\n              <ListLink to=\"https://dotnet.microsoft.com/apps/aspnet\">\r\n                ASP.NET\r\n              </ListLink>\r\n              <ListLink to=\"https://github.com/dotnet/core\">.NET Core</ListLink>\r\n              <ListLink to=\"https://www.elastic.co/products/elasticsearch\">\r\n                Elastic Search\r\n              </ListLink>\r\n              <ListLink to=\"https://aws.amazon.com/\">AWS</ListLink>\r\n              <ListLink to=\"https://graphql.org/\">GraphQL</ListLink>\r\n              <ListLink to=\"https://www.ecma-international.org/ecma-262/6.0/\">\r\n                ES6\r\n              </ListLink>\r\n              <ListLink to=\"https://www.docker.com/\">Docker</ListLink>\r\n            </ul>\r\n            <p>\r\n              Go was my first real experience with web development and working\r\n              with SaaS. Go is a SPA built on modern web infrastructure with\r\n              micro services running in docker containers, an ASP.NET server,\r\n              and a ES6 client.\r\n            </p>\r\n            <p>\r\n              The crux with this product was that it had a hefty amount of data,\r\n              that was to be made searchable and available to the user. Both\r\n              using the web client and the API for integrations. Storing\r\n              commonly used information in a quick search engine and lazy\r\n              loading more data on demand, in combination with a graphQL API\r\n              where you have to explicitly ask for the information you want is\r\n              great for this purpose.\r\n            </p>\r\n          </div>\r\n          <div className={style.project}>\r\n            <h3>Lime Easy</h3>\r\n            <ul className={style.tags}>\r\n              <ListLink to=\"https://docs.microsoft.com/en-us/windows/win32/com/\">\r\n                COM\r\n              </ListLink>\r\n              <ListLink to=\"https://docs.microsoft.com/en-us/windows/win32/\">\r\n                Win32\r\n              </ListLink>\r\n              <ListLink to=\"https://dotnet.microsoft.com\">.NET</ListLink>\r\n            </ul>\r\n            <p>\r\n              Easy is the first \"real life\" software product I've worked on so\r\n              maybe it's not so surprising that it taught me the most.\r\n            </p>\r\n            <p>\r\n              When I started working with Lime Easy, the objective was to take a\r\n              very popular product and modernize it. Both in terms of tech stack\r\n              and in terms of visual design. Later the objective shifted towards\r\n              just maintaining the product and move users to Limes other\r\n              products.\r\n            </p>\r\n            <p>\r\n              Lime Easy is a Win32 program written in C++ by a tight group of\r\n              developers over 20 years. Oh, and with no tests to speak of. It's\r\n              safe to say it had quite a few pitfalls and caveats. It was not\r\n              trivial to add or alter functionality without breaking something\r\n              else. The book{\" \"}\r\n              <Link to=\"http://ptgmedia.pearsoncmg.com/images/9780131177055/samplepages/0131177052.pdf\">\r\n                \"Working Effectively With Legacy Code\" by Michael C. Feathers{\" \"}\r\n              </Link>\r\n              was of great help when trying to figure this out.\r\n            </p>\r\n            <p>\r\n              Some people may cringe at the thought of working with Win32 and\r\n              COM, but I'm very glad I did. Concepts like the Windows message\r\n              loop are borrowed and reused in modern frameworks like Redux. COM\r\n              was one of the earliest attempts at cross platform,\r\n              language-neutral communication between software programs. At it's\r\n              essence it's quite an elegant way to have a self documenting API.\r\n            </p>\r\n          </div>\r\n        </section>\r\n      </article>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default XpPage;\r\n","/**\r\n * Layout component that queries for data\r\n * with Gatsby's useStaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useStaticQuery, graphql } from \"gatsby\";\r\nimport { IconContext } from \"react-icons\";\r\n\r\nimport { Header, Contact } from \".\";\r\nimport \"./layout.module.scss\";\r\n\r\nconst Layout = ({ hideFooter, children }) => {\r\n  const data = useStaticQuery(graphql`\r\n    query SiteTitleQuery {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n        }\r\n      }\r\n    }\r\n  `);\r\n\r\n  return (\r\n    <>\r\n      <IconContext.Provider value={{ className: \"icon\" }}>\r\n        <Header siteTitle={data.site.siteMetadata.title} />\r\n        <main>{children}</main>\r\n        {!hideFooter && (\r\n          <footer>\r\n            <Contact />\r\n          </footer>\r\n        )}\r\n      </IconContext.Provider>\r\n    </>\r\n  );\r\n};\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Layout;\r\n","/**\r\n * SEO component that queries for data with\r\n *  Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Helmet from \"react-helmet\";\r\nimport { useStaticQuery, graphql } from \"gatsby\";\r\n\r\nconst SEO = ({ description, lang, meta, title }) => {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `\r\n  );\r\n\r\n  const metaDescription = description || site.siteMetadata.description;\r\n\r\n  return (\r\n    <Helmet\r\n      htmlAttributes={{\r\n        lang,\r\n      }}\r\n      title={title}\r\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\r\n      defaultTitle=\"Ahmad Game\"\r\n      meta={[\r\n        {\r\n          name: `description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          property: `og:description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:type`,\r\n          content: `website`,\r\n        },\r\n        {\r\n          name: `twitter:card`,\r\n          content: `summary`,\r\n        },\r\n        {\r\n          name: `twitter:creator`,\r\n          content: site.siteMetadata.author,\r\n        },\r\n        {\r\n          name: `twitter:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          name: `twitter:description`,\r\n          content: metaDescription,\r\n        },\r\n      ].concat(meta)}\r\n    />\r\n  );\r\n};\r\n\r\nSEO.defaultProps = {\r\n  lang: `en`,\r\n  meta: [],\r\n  description: ``,\r\n};\r\n\r\nSEO.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.arrayOf(PropTypes.object),\r\n};\r\n\r\nexport default SEO;\r\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\";\r\n\r\nimport style from \"./header.module.scss\";\r\nimport { ListLink } from \".\";\r\n\r\nconst Header = () => (\r\n  <header>\r\n    <nav>\r\n      <input type=\"checkbox\" />\r\n      <span className={`${style.bar} ${style.first}`} />\r\n      <span className={`${style.bar} ${style.second}`} />\r\n      <span className={`${style.bar} ${style.third}`} />\r\n      <ul className={style.navMenu}>\r\n        <ListLink className=\"dark-bg\" to=\"/\">\r\n          Home\r\n        </ListLink>\r\n        <ListLink className=\"dark-bg\" to=\"/bio/\">\r\n          Who I am\r\n        </ListLink>\r\n        <ListLink className=\"dark-bg\" to=\"/experience/\">\r\n          What I do\r\n        </ListLink>\r\n        <ListLink className=\"dark-bg\" to=\"/blog/\">\r\n          What I think\r\n        </ListLink>\r\n      </ul>\r\n    </nav>\r\n  </header>\r\n);\r\n\r\nexport default Header;\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link as InternalLink } from \"gatsby\";\r\nimport { OutboundLink } from \"gatsby-plugin-google-analytics\";\r\n\r\nconst ListLink = ({ to, children, ...rest }) => {\r\n  return (\r\n    <li>\r\n      <Link to={to} {...rest}>\r\n        {children}\r\n      </Link>\r\n    </li>\r\n  );\r\n};\r\n\r\nconst Link = ({ to, showButton, children, ...rest }) => {\r\n  const link = isAbsoluteUrl(to) ? (\r\n    <OutboundLink href={to} target=\"_blank\" rel=\"noreferrer\" {...rest}>\r\n      {children}\r\n    </OutboundLink>\r\n  ) : (\r\n    <InternalLink to={to} {...rest}>\r\n      {children}\r\n    </InternalLink>\r\n  );\r\n\r\n  return link;\r\n};\r\n\r\nconst isAbsoluteUrl = url => {\r\n  const pattern = /^(https?:\\/\\/)|(mailto:)|(tel:)/i;\r\n  return pattern.test(url);\r\n};\r\n\r\nLink.propTypes = {\r\n  to: PropTypes.string.isRequired,\r\n};\r\n\r\nexport { Link, ListLink };\r\n","import React from \"react\";\r\nimport { Link } from \"./link\";\r\nimport { MdEmail } from \"react-icons/md\";\r\nimport { FaLinkedinIn, FaGithub } from \"react-icons/fa\";\r\n\r\nconst Contact = () => (\r\n  <div\r\n    style={{\r\n      width: \"15rem\",\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"space-between\",\r\n    }}\r\n  >\r\n    <Link className=\"dark-bg\" to=\"https://github.com/a-game\">\r\n      <FaGithub />\r\n    </Link>\r\n    <Link className=\"dark-bg\" to=\"mailto:me@ahmadgame.com\">\r\n      <MdEmail />\r\n    </Link>\r\n    <Link className=\"dark-bg\" to=\"https://www.linkedin.com/in/ahmadgame\">\r\n      <FaLinkedinIn />\r\n    </Link>\r\n  </div>\r\n);\r\n\r\nexport default Contact;\r\n","import Header from \"./header\";\r\nimport Layout from \"./layout\";\r\nimport SEO from \"./seo\";\r\nimport { Link, ListLink } from \"./link\";\r\nimport Contact from \"./contact\";\r\n\r\nexport { Header, Layout, SEO, Link, ListLink, Contact };\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}